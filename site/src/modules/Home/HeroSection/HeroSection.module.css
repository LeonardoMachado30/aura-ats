/* src/modules/Home/HeroSection/HeroSection.module.css */

.hero {
  position: relative; /* Necessário se HeroSection for o contêiner pai de algo com position: absolute/fixed */
  width: 100%;
  height: calc(100vh - var(--header-height)); /* Ajusta a altura da Hero Section para ser 100vh menos a altura do cabeçalho */
  overflow: hidden; /* Garante que nada transborde */
}

@media (max-width: 768px) {
  .hero {
    height: calc(100vh - var(--header-height-mobile)); /* Ajusta para mobile */
  }
}

.slideContent {
  position: relative; /* ESSENCIAL para que Image com 'fill' funcione corretamente */
  width: 100%;
  height: 100%; /* Ocupa 100% da altura da .hero */
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--secondary-color); /* Para o texto sobre a imagem */
}

.slideContent :global(img) { /* Seleciona a tag <img> gerada pelo Next.js Image component */
  object-fit: cover; /* Aplica o object-fit aqui no CSS */
  /*z-index: -1; */ /* Remova o z-index negativo daqui, a camada de overlay resolverá isso */
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Escurece a imagem para o texto ser legível */
  z-index: 1; /* Garante que o overlay esteja acima da imagem */
}

.textContainer {
  position: relative; /* Para que o texto fique acima do overlay */
  z-index: 2; /* Garante que o texto esteja acima do overlay */
  text-align: center;
  max-width: 800px;
  padding: var(--spacing-md);
  /* Adicione margens/padding para centralizar e dar espaço ao texto */
}

.textContainer h1 {
  font-size: var(--font-size-h1);
  margin-bottom: var(--spacing-sm);
  color: var(--secondary-color); /* Texto branco */
}

.textContainer p {
  font-size: var(--font-size-xl);
  margin-bottom: var(--spacing-lg);
  color: var(--bg-color-light); /* Um cinza claro para a descrição */
}