model Vaga {
    id                String                @id @default(uuid(7))
    titulo            String
    descricao         String
    requisitos        String?
    responsabilidades String?
    dataPublicacao    DateTime              @default(now())
    dataFechamento    DateTime?
    create_at         DateTime              @default(now())
    update_at         DateTime              @updatedAt
    categoria         CategoriaVaga
    status            StatusVaga
    tipoContrato      TipoContrato?
    nivelExperiencia  NivelExperiencia?
    areaCandidato     AreaCandidato?
    salario           Decimal?              @db.Decimal(12, 2)
    moeda             Moeda?
    tipoSalario       String?
    periodicidade     PeriodicidadeSalario?
    agendaVaga        Agenda[]
    triagens          TriagemVaga[]
    beneficios        VagaBeneficio[]
    anexos            VagaAnexo[]
    habilidades       VagaHabilidade[]
    candidaturas      CandidaturaVaga[]

    cliente   Cliente? @relation(fields: [clienteId], references: [id])
    clienteId String?

    localizacao   Localizacao? @relation(fields: [localizacaoId], references: [id])
    localizacaoId String?

    @@index([localizacaoId])
    @@index([clienteId])
    @@schema("Vaga")
}

model VagaHabilidade {
    nivelExigido String?

    habilidade   Habilidade @relation(fields: [habilidadeId], references: [id])
    habilidadeId String

    vaga   Vaga   @relation(fields: [vagaId], references: [id])
    vagaId String

    @@id([vagaId, habilidadeId])
    @@index([habilidadeId])
    @@schema("VagaHabilidade")
}

model CandidaturaVaga {
    id            String            @id @default(uuid(7))
    status        StatusCandidatura @default(APLICADO)
    dataAplicacao DateTime          @default(now())
    observacoes   String?

    candidato   Candidato @relation(fields: [candidatoId], references: [id])
    candidatoId String

    vaga   Vaga   @relation(fields: [vagaId], references: [id])
    vagaId String

    agendaCandidatura       AgendaCandidatura[]
    processoSeletivoEtapa   ProcessoSeletivoEtapa? @relation(fields: [processoSeletivoEtapaId], references: [id])
    processoSeletivoEtapaId String?

    @@unique([candidatoId, vagaId])
    @@index([vagaId])
    @@index([processoSeletivoEtapaId])
    @@schema("CandidaturaVaga")
}

model Anexo {
    id          String  @id @default(uuid(7))
    nomeArquivo String
    url         String
    tipo        String?
    tamanhoKb   Int?

    vagas VagaAnexo[]

    @@schema("Anexo")
}

model VagaAnexo {
    anexo   Anexo  @relation(fields: [anexoId], references: [id])
    anexoId String

    vaga   Vaga   @relation(fields: [vagaId], references: [id])
    vagaId String

    @@id([vagaId, anexoId])
    @@index([anexoId])
    @@schema("VagaAnexo")
}

// normalização: separar catálogo de benefícios e vínculo
model Beneficio {
    id        String          @id @default(uuid(7))
    nome      String          @unique
    descricao String?
    vagas     VagaBeneficio[]

    @@schema("Beneficio")
}

model VagaBeneficio {
    beneficio   Beneficio @relation(fields: [beneficioId], references: [id])
    beneficioId String

    vaga   Vaga   @relation(fields: [vagaId], references: [id])
    vagaId String

    @@id([vagaId, beneficioId])
    @@index([beneficioId])
    @@schema("VagaBeneficio")
}

model Habilidade {
    id             String           @id @default(uuid(7))
    nome           String           @unique
    tipoHabilidade String?
    // candidatos     CandidatoHabilidade[]
    vagas          VagaHabilidade[]

    @@schema("Habilidade")
}
